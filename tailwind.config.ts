import type { Config } from "tailwindcss";

const config: Config = {
  darkMode: ["class"],
  content: [
    "./pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./components/**/*.{js,ts,jsx,tsx,mdx}",
    "./app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        "maetel-neutral-00": "var(--maetel-neutral-00)",
        "maetel-neutral-03": "var(--maetel-neutral-03)",
        "maetel-neutral-05": "var(--maetel-neutral-05)",
        "maetel-neutral-10": "var(--maetel-neutral-10)",
        "maetel-neutral-15": "var(--maetel-neutral-15)",
        "maetel-neutral-20": "var(--maetel-neutral-20)",
        "maetel-neutral-30": "var(--maetel-neutral-30)",
        "maetel-neutral-40": "var(--maetel-neutral-40)",
        "maetel-neutral-50": "var(--maetel-neutral-50)",
        "maetel-neutral-60": "var(--maetel-neutral-60)",
        "maetel-neutral-70": "var(--maetel-neutral-70)",
        "maetel-neutral-80": "var(--maetel-neutral-80)",
        "maetel-neutral-85": "var(--maetel-neutral-85)",
        "maetel-neutral-90": "var(--maetel-neutral-90)",
        "maetel-neutral-95": "var(--maetel-neutral-95)",
        "maetel-neutral-100": "var(--maetel-neutral-100)",
        "maetel-main-00": "var(--maetel-main-00)",
        "maetel-main-03": "var(--maetel-main-03)",
        "maetel-main-05": "var(--maetel-main-05)",
        "maetel-main-10": "var(--maetel-main-10)",
        "maetel-main-20": "var(--maetel-main-20)",
        "maetel-main-30": "var(--maetel-main-30)",
        "maetel-main-40": "var(--maetel-main-40)",
        "maetel-main-50": "var(--maetel-main-50)",
        "maetel-main-60": "var(--maetel-main-60)",
        "maetel-main-70": "var(--maetel-main-70)",
        "maetel-main-80": "var(--maetel-main-80)",
        "maetel-main-90": "var(--maetel-main-90)",
        "maetel-main-100": "var(--maetel-main-100)",
        "maetel-red-05": "#feecec",
        "maetel-red-40": "#ff6363",
        "semantic-text-100": "var(--semantic-text-100)",
        "semantic-text-80": "var(--semantic-text-80)",
        "semantic-text-60": "var(--semantic-text-60)",
        "semantic-text-40": "var(--semantic-text-40)",
        "semantic-text-20": "var(--semantic-text-20)",
        "semantic-text-100-invert": "var(--semantic-text-100-invert)",
        "semantic-text-80-invert": "var(--semantic-text-80-invert)",
        "semantic-text-60-invert": "var(--semantic-text-60-invert)",
        "semantic-text-40-invert": "var(--semantic-text-40-invert)",
        "semantic-text-20-invert": "var(--semantic-text-20-invert)",
        "semantic-fill-100": "var(--semantic-fill-100)",
        "semantic-fill-80": "var(--semantic-fill-80)",
        "semantic-fill-60": "var(--semantic-fill-60)",
        "semantic-fill-40": "var(--semantic-fill-40)",
        "semantic-fill-20": "var(--semantic-fill-20)",
        "semantic-fill-10": "var(--semantic-fill-10)",
        "semantic-fill-100-invert": "var(--semantic-fill-100-invert)",
        "semantic-fill-80-invert": "var(--semantic-fill-80-invert)",
        "semantic-fill-60-invert": "var(--semantic-fill-60-invert)",
        "semantic-fill-40-invert": "var(--semantic-fill-40-invert)",
        "semantic-fill-20-invert": "var(--semantic-fill-20-invert)",
        "semantic-fill-10-invert": "var(--semantic-fill-10-invert)",
        "semantic-border-100": "var(--semantic-border-100)",
        "semantic-border-80": "var(--semantic-border-80)",
        "semantic-border-60": "var(--semantic-border-60)",
        "semantic-border-40": "var(--semantic-border-40)",
        "semantic-border-100-invert": "var(--semantic-border-100-invert)",
        "semantic-border-80-invert": "var(--semantic-border-80-invert)",
        "semantic-border-60-invert": "var(--semantic-border-60-invert)",
        "semantic-border-40-invert": "var(--semantic-border-40-invert)",
        "semantic-border-backdrop": "var(--semantic-border-backdrop)",
        "semantic-shadow-10": "var(--semantic-shadow-10)",
        "semantic-shadow-20": "var(--semantic-shadow-20)",
        "semantic-shadow-30": "var(--semantic-shadow-30)",
        "semantic-text-error": "var(--semantic-text-error)",
        "semantic-fill-error": "var(--semantic-fill-error)",
        "semantic-border-error": "var(--semantic-border-error)",
        "semantic-text-positive": "var(--semantic-text-positive)",
        "semantic-fill-positive": "var(--semantic-fill-positive)",
        "semantic-border-positive": "var(--semantic-border-positive)",
        "semantic-text-accent": "var(--semantic-text-accent)",
        "semantic-border-accent": "var(--semantic-border-accent)",
        "semantic-fill-accent": "var(--semantic-fill-accent)",
        "semantic-text-sale": "var(--semantic-text-sale)",
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        chart: {
          "1": "hsl(var(--chart-1))",
          "2": "hsl(var(--chart-2))",
          "3": "hsl(var(--chart-3))",
          "4": "hsl(var(--chart-4))",
          "5": "hsl(var(--chart-5))",
        },
      },
      boxShadow: {
        "20": "0px 0px 1px 0px var(--semantic-shadow-10), 0px 0px 1px 0px var(--semantic-shadow-10)",
        "40": "0px 0px 1px 0px var(--semantic-shadow-10), 0px 1px 4px 0px var(--semantic-shadow-10)",
        "60": "0px 0px 4px 0px var(--semantic-shadow-10), 0px 4px 8px 0px var(--semantic-shadow-10)",
        "80": "0px 0px 8px 0px var(--semantic-shadow-10), 0px 8px 16px 0px var(--semantic-shadow-10)",
        "100":
          "0px 0px 12px 0px var(--semantic-shadow-10), 0px 16px 24px 0px var(--semantic-shadow-10)",
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
    },
  },
  // eslint-disable-next-line @typescript-eslint/no-require-imports
  plugins: [require("tailwindcss-animate")],
};
export default config;
